#!/bin/dash

# pfilemnt: Click image files to mount & unmount
# by: Terry Becker aka: SunBurnt

# https://github.com/bkauler/woofq/blob/main/easyos/easy-code/rootfs-skeleton/usr/bin/filemnt

# Re-write by gumanzoy https://github.com/PocketHandyBox
# Renamed from filemnt to pfilemnt
# Replace rox with xdg-open
# Disable encrypted save-files
# Use notify-send, remove gtkdialog-splash, pupdialog, pupmessage
# Re-write, remove mount -t $Type option

if [ "`whoami`" != "root" ]; then
	which gksu > /dev/null && exec gksu ${0} "$@"
	which gsu > /dev/null && exec gsu ${0} "$@"
	echo "This script should be run as root"
	exit 1
fi

if [ ! -f "$1" ]; then
	echo "No regular file: $1"
	exit 1
fi

notify_send() {
notify-send --app-name=pfilemnt --icon=system-file-manager "$@"
}

FILEPATH="`realpath "$1"`"
FILENAME="`basename "$FILEPATH"`"

#ex: /mnt/files/kernel_src-3.0.7-patched.sfs becomes /mnt/+mnt+home+kernel_src-3.0.7-patched.sfs
MOUNTPATH='/mnt/'"`echo "$FILEPATH" | sed 's#/#+#g'`"

if mount | grep -q "$MOUNTPATH"; then # file mounted, unmount it
  sync && umount "$MOUNTPATH"
  Err=$?
  sync && rmdir "$MOUNTPATH"
  notify_send -t 3000 "Unmounting" "\'$FILENAME\'"
else # file not mounted
  mkdir -p "$MOUNTPATH"
  mount -o loop "$FILEPATH" "$MOUNTPATH"
  Err=$?
  if [ $Err -eq 0 ]; then
    xdg-open "$MOUNTPATH" # mount good, run xdg-open
    notify_send -t 6000 "Mount succes" "Click \'$FILENAME\' icon again to unmount it"
  else
    rmdir "$MOUNTPATH"
  fi
fi

if [ $Err -ne 0 ]; then	# ERROR: mount/unmount
  notify_send "Failed mounting or unmounting" "\'$FILEPATH\'"
fi
